3. #include<iostream>
#include<iomanip>
using namespace std;
inline double square(double x)
{
	return x * x;
}

double power(double base, int exponent = 2) {
    if (exponent == 0) return 1.0;  
    double result = 1.0;
    for (int i = 0; i < exponent; i++) {
        result *= base;
    }
    return result;
}

double calc(double a, double b, char op) {
    switch (op) {
    case '+': return a + b;
    case '-': return a - b;
    case '*': return a * b;
    case '/':
        if (b == 0) {
            cout << "Error: divide by zero" << endl;
            return 0.0;
        }
        return a / b;
    default:
        cout << "Error: invalid operator" << endl;  
        return 0.0;
    }
}


double calc(int a, int b, char op) {
    return calc(static_cast<double>(a), static_cast<double>(b), op);
}

int main() {
    double a, b;
    char op;
    cout << "请输入两个操作数和运算符(格式: 操作数1 操作数2 运算符): ";
    cin >> a >> b >> op;
    cout << fixed << setprecision(2);
    cout << "square(" << a << ") = " << square(a) << endl;
    cout << "square(" << b << ") = " << square(b) << endl;
    cout << "power(" << a << ") = " << power(a) << endl;  
    cout << "power(" << b << ", 3) = " << power(b, 3) << endl;  
    cout << "calc(" << a << ", " << b << ", '" << op << "') = " << calc(a, b, op) << endl;
    cout << "calc(" << static_cast<int>(a) << ", " << static_cast<int>(b) << ", '" << op << "') = "
        << calc(static_cast<int>(a), static_cast<int>(b), op) << endl;
    system("pause");
    return 0;
}
